/// <reference types="node" />
import BaseRecord from '../../backend/adapters/base-record';
import { ActionRequest } from '../../backend/actions/action.interface';
/**
 * Data fetched form (FileList)[https://developer.mozilla.org/en-US/docs/Web/API/FileList] element.
 *
 * @alias FileObject
 * @memberof module~file-uploader
 */
export declare type FileObject = {
    /**
     * File name
     */
    name: string;
    /**
     * Mime Type
     */
    type?: string;
    /**
     * Size in bytes stored as a string
     */
    size?: string;
    /**
     * path where the file was stored
     */
    path: string;
};
export declare type FileObjectWithTmp = FileObject & {
    tmpFilePath: string;
};
export declare type FileObjectWithBuffer = Omit<FileObject, 'path'> & {
    file: Buffer;
};
/**
 * @memberof module~file-uploader
 * @alias MappedFields
 */
export declare type MappedFields = {
    /**
     * File name
     */
    name: string;
    /**
     * Stored file path
     */
    path: string;
    /**
     * Mime type
     */
    type?: string;
    /**
     * Size of the file (in bytes)
     */
    size?: string;
};
export declare function mapFields(fileObject: FileObject, mappedFields: MappedFields): {
    [key: string]: string;
};
export declare function recordToFileObject(record: BaseRecord, mappedFields: MappedFields): FileObject;
/**
 * In Before filter it moves uploaded photo to the context
 * @returns [request, fileObject]
 */
export declare function extractFileObject(request: ActionRequest, fieldPath: string): [ActionRequest, FileObjectWithBuffer | null];
