import React, { ReactNode } from 'react';
import { DefaultTheme } from 'styled-components';
import { EditPropertyProps, SelectRecord } from '../base-property-props';
import RecordJSON from '../../../../backend/decorators/record-json.interface';
declare type CombinedProps = EditPropertyProps & {
    theme: DefaultTheme;
};
declare type SelectRecordEnhanced = SelectRecord & {
    record: RecordJSON;
};
declare class Edit extends React.Component<CombinedProps> {
    private selected;
    constructor(props: CombinedProps);
    handleChange(selected: SelectRecordEnhanced): void;
    loadOptions(inputValue: string): Promise<Array<SelectRecordEnhanced>>;
    render(): ReactNode;
}
declare const _default: React.ForwardRefExoticComponent<Pick<import("../base-property-props").BasePropertyProps & {
    onChange: import("../base-property-props").OnPropertyChange;
    record: RecordJSON;
} & {
    theme: DefaultTheme;
} & React.RefAttributes<Edit>, "filter" | "record" | "resource" | "key" | "ref" | "onChange" | "property"> & {
    theme?: DefaultTheme | undefined;
}>;
export default _default;
