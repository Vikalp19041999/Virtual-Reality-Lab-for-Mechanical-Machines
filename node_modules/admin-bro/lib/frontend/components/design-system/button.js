"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _polished = require("polished");

var _styledSystem = require("styled-system");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const pulse = (0, _styledComponents.keyframes)(["from{box-shadow:0 0 0 0 rgba(0,0,0,0);}"]);

const buttonVariants = theme => (0, _styledSystem.variant)({
  variants: {
    primary: {
      color: 'white',
      bg: 'primary',
      'border-color': 'transparent'
    },
    danger: {
      color: 'white',
      bg: 'danger',
      'border-color': 'transparent',
      '&:hover': {
        'box-shadow': `0 0 0 2px ${(0, _polished.lighten)(0.1, theme.colors.danger)};`
      }
    },
    text: {
      color: 'primary',
      bg: 'transparent',
      borderColor: 'transparent',
      '&:hover': {
        'text-decoration': 'underline',
        'box-shadow': 'none'
      }
    }
  }
});

const sizeVariants = (0, _styledSystem.variant)({
  prop: 'size',
  variants: {
    sm: {
      fontSize: 0,
      py: 2
    },
    lg: {
      fontSize: 2
    }
  }
});

const Button = _styledComponents.default.button.withConfig({
  displayName: "button__Button",
  componentId: "sc-12v5qb0-0"
})(["outline:0;line-height:", ";border:1px solid ", ";cursor:pointer;&:hover{box-shadow:0 0 0 2px ", ";animation:", " .3s;}", ";", ";", ";", ";", ";"], ({
  theme
}) => theme.lineHeights.standard, ({
  theme
}) => theme.colors.primary, ({
  theme
}) => (0, _polished.lighten)(0.1, theme.colors.primary), pulse, _styledSystem.color, _styledSystem.space, _styledSystem.fontSize, ({
  theme
}) => buttonVariants(theme), sizeVariants);

Button.defaultProps = {
  px: 4,
  py: 3,
  fontSize: 1,
  color: 'primary'
};
var _default = Button;
exports.default = _default;